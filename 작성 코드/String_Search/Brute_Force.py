

def bf_match(txt: str, pat: str) -> int:
    """브루트 포스법으로 문자열 검색"""
    pt = 0  # txt(텍스트)를 따라가는 커서
    pp = 0  # pat(패턴)를 따라가는 커서

    while pt != len(txt) and pp != len(pat):
        if txt[pt] == pat[pp]:
            pt += 1
            pp += 1
        else:
            pt = pt - pp + 1
            pp = 0

    return pt - pp if pp == len(pat) else -1

txt1 = 'ABABCDEFGHA'
pat1 = 'ABC'

print(bf_match(txt1,pat1))

""" 해설 : 브루트 포스 문자열 검색 방법은 검색의 대상이 되는 '텍스트'와 검색을 할 문자열인 '패턴'을 나란히 놓고 첫 문자부터 차례대로 검사하는 방법을 말한다.
    즉, 서로의 0번째 인덱스부터 비교를 하고 같으면 그 다음 인덱스로 넘어가며 텍스트에서 패턴이 발견되면 해당 인덱스 번호를 반환된다.
    그 과정을 살펴보면 각각 텍스트와 패턴에 관한 변수 pt,pp를 설정하고 같은 해당 인덱스 번호에서 같은 문자열일 경우 서로 +1 해주며 그 다음 문자열 검사로 넘어가며
    만약 다른 문자열일 경우 텍스트는 pt(텍스트의 위치) - pp(문자열 검색을 하기 위해 갔던 거리) + 1(다음 검색을 위한 +1) 변수 설정을 해주며
    pp는 0을 설정한다. 이런 식으로 문자열이 검색 되었으면 반환 값으로 pt-pp를 해주면 되고 아니면 -1이 반환 된다."""